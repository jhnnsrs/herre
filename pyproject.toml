[tool.poetry]
name = "herre"
version = "0.2.7"
readme = "README.md"
description = "openid connect client tailore to pyqt and async environments"
authors = ["jhnnsrs <jhnnsrs@gmail.com>"]
license = "CC BY-NC 3.0"
packages = [{include = "herre"}]

[tool.poetry.dependencies]
python = "^3.7"
QtPy = {version= "^2.0.1", optional = true}
aiohttp = "^3.7.4"
oauthlib = "^3.1.1"
fakts = {version = "^0.2.5", optional = true}
pydantic = "^1.9.0"
koil = "^0.2.6"

[tool.poetry.extras]
qt = ["QtPy"]
windowed = ["PyQtWebEngine"]
fakts = ["fakts"]


[tool.poetry.dev-dependencies]
pytest = "^6.2.5"
pytest-aiohttp = "^0.3.0"
pytest-cov = "^3.0.0"
black = "^21.12b0"
pytest-qt = "^4.0.2"
PyQtWebEngine = "^5.15.5"
PyQt5 = "^5.15.6"
testcontainers = "^3.5.3"
pydoc-markdown = "4.5.0"

[tool.pytest.ini_options]
qt_api="pyqt5"
markers = [
    "integration: marks tests that require a running server",
    "qt: marks tests that require a running qt application",
]


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[[tool.pydoc-markdown.loaders]]
type = "python"
search_path = [ "herre" ]

[tool.pydoc-markdown.renderer]
type = "docusaurus"
docs_base_path = "website/docs"