[tool.poetry]
name = "herre"
version = "0.3.8"
readme = "README.md"
description = "oauth2/openid client tailored to pyqt and async environments"
authors = ["jhnnsrs <jhnnsrs@gmail.com>"]
license = "CC BY-NC 3.0"
packages = [{ include = "herre" }]

[tool.poetry.dependencies]
python = "^3.7"
aiohttp = ">3.7.4"
certifi = ">2021"
oauthlib = "^3.1.1"
pydantic = "^1.9.0"
koil = ">=0.2.10"


fakts = { version = "^0.2.13", optional = true }
QtPy = { version = "^2.0.1", optional = true }


[tool.poetry.extras]
qt = ["QtPy"]
windowed = ["PyQtWebEngine"]
fakts = ["fakts"]


[tool.poetry.group.dev.dependencies]
autoflake = "^1.7.7"
pytest = "^7.2.0"
PyQtWebEngine = "^5.15.5"
PyQt5 = "^5.15.6"
testcontainers = "^3.7.0"
pytest-qt = "^4.2.0"
pytest-asyncio = "^0.20.2"
mypy = "^0.991"

[tool.pytest.ini_options]
qt_api = "pyqt5"
markers = [
    "integration: marks tests that require a running server",
    "qt: marks tests that require a running qt application",
]


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[[tool.pydoc-markdown.loaders]]
type = "python"
search_path = ["herre"]

[tool.pydoc-markdown.renderer]
type = "docusaurus"
docs_base_path = "website/docs"


[tool.mypy]
warn_return_any = true
warn_unused_configs = true


[[tool.mypy.overrides]]
module = ["oauthlib.*", "koil.*", "fakts.*"]
ignore_missing_imports = true
