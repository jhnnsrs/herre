"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[521],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return k}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),h=u(n),k=a,d=h["".concat(s,".").concat(k)]||h[k]||p[k]||l;return n?r.createElement(d,o(o({ref:t},c),{},{components:n})):r.createElement(d,o({ref:t},c))}));function k(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,o=new Array(l);o[0]=h;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,o[1]=i;for(var u=2;u<l;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},5251:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return k},frontMatter:function(){return i},metadata:function(){return u},toc:function(){return p}});var r=n(7462),a=n(3366),l=(n(7294),n(3905)),o=["components"],i={sidebar_label:"herre",title:"herre"},s=void 0,u={unversionedId:"reference/herre",id:"reference/herre",title:"herre",description:"Herre Objects",source:"@site/docs/reference/herre.md",sourceDirName:"reference",slug:"/reference/herre",permalink:"/herre/docs/reference/herre",editUrl:"https://github.com/jhnnsrs/turms/edit/master/website/docs/reference/herre.md",tags:[],version:"current",frontMatter:{sidebar_label:"herre",title:"herre"},sidebar:"tutorialSidebar",previous:{title:"static",permalink:"/herre/docs/reference/grants/static"},next:{title:"models",permalink:"/herre/docs/reference/models"}},c={},p=[{value:"Herre Objects",id:"herre-objects",level:2},{value:"token",id:"token",level:4},{value:"aget_token",id:"aget_token",level:4},{value:"arefresh_token",id:"arefresh_token",level:4},{value:"arequest_from_grant",id:"arequest_from_grant",level:4},{value:"Parameters",id:"parameters",level:2},{value:"Returns",id:"returns",level:2},{value:"get_token",id:"get_token",level:4},{value:"aget_user",id:"aget_user",level:4},{value:"__aenter__",id:"__aenter__",level:4},{value:"__aexit__",id:"__aexit__",level:4},{value:"_repr_html_inline_",id:"_repr_html_inline_",level:4},{value:"Config Objects",id:"config-objects",level:2},{value:"get_current_herre",id:"get_current_herre",level:4}],h={toc:p};function k(e){var t=e.components,n=(0,a.Z)(e,o);return(0,l.kt)("wrapper",(0,r.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"herre-objects"},"Herre Objects"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class Herre(KoiledModel)\n")),(0,l.kt)("p",null,"Herre is a client for Token authentication."),(0,l.kt)("p",null,"It provides a unified, composable interface for token based authentication based on grant.\nA grant is a class that is able to retrieve a token. Importantly grants do not have to\ndirectly call the token endpoint. They can also use a cache or other means to retrieve the\ntoken."),(0,l.kt)("p",null,"Herre is a context manager. This allows it both to provide itself as a singleton and handle\nthe asynchronous interface of the grant. As well as providing a lock to ensure that only one\nrequest is happening at a time."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Example"),":"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'```python\nfrom herre import Herre,\nfrom herre.grants.oauth2.client_credentials import ClientCredentialsGrant\n\nherre = Herre(\n    grant=ClientCredentialsGrant(\n        client_id="my_client_id",\n        client_secret="my_client\n        base_url="https://my_token_url",\n    )\n)\n\nwith herre:\n    token = herre.get_token()\n```\n')),(0,l.kt)("p",null,"  or aync"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'```python\nfrom herre import Herre,\nfrom herre.grants.oauth2.client_credentials import ClientCredentialsGrant\n\nherre = Herre(\n    grant=ClientCredentialsGrant(\n        client_id="my_client_id",\n        client_secret="my_client\n        base_url="https://my_token_url",\n    )\n)\n\nasync with herre:\n    token = await herre.get_token()\n```\n')),(0,l.kt)("h4",{id:"token"},"token"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"@property\ndef token() -> Token\n")),(0,l.kt)("p",null,"The current token"),(0,l.kt)("h4",{id:"aget_token"},"aget","_","token"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"async def aget_token(**kwargs) -> str\n")),(0,l.kt)("p",null,"Get an access token"),(0,l.kt)("p",null,"Will return an access token if it is already available or\ntry to login depending on auto_login. The checking and potential retrieving will happen\nin a lock ensuring that not multiple requests are happening at the same time."),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"auto_login")," ",(0,l.kt)("em",{parentName:"li"},"bool, optional")," - Should we allow an automatic login. Defaults to True.")),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},"Returns"),":"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("inlineCode",{parentName:"li"},"str")," - The access token")),(0,l.kt)("h4",{id:"arefresh_token"},"arefresh","_","token"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"async def arefresh_token(**kwargs) -> str\n")),(0,l.kt)("p",null,"Refresh the token"),(0,l.kt)("p",null,"Will cause the linked grant to refresh the token. Depending\non the link logic, this might cause another login."),(0,l.kt)("h4",{id:"arequest_from_grant"},"arequest","_","from","_","grant"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"async def arequest_from_grant(request: TokenRequest) -> Token\n")),(0,l.kt)("p",null,"Request a token from the grant"),(0,l.kt)("p",null,"You should not need to call this method directly. It is used internally\nto request a token from the grant, and will not directly acquire a lock\n(so multiple requests can happen at the same time, which is often not what\nyou want)."),(0,l.kt)("h2",{id:"parameters"},"Parameters"),(0,l.kt)("p",null,"request : TokenRequest\nThe token request (contains context and whether it is a refresh request)"),(0,l.kt)("h2",{id:"returns"},"Returns"),(0,l.kt)("p",null,"Token\nThe token (with access_token, refresh_token, etc.)"),(0,l.kt)("h4",{id:"get_token"},"get","_","token"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"def get_token(**kwargs) -> str\n")),(0,l.kt)("p",null,"Get an access token"),(0,l.kt)("p",null,"Will return an access token if it is already available or\ntry to login depending on auto_login. The checking and potential retrieving will happen\nin a lock ensuring that not multiple requests are happening at the same time."),(0,l.kt)("h4",{id:"aget_user"},"aget","_","user"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"async def aget_user(**kwargs) -> BaseModel\n")),(0,l.kt)("p",null,"Get the current user"),(0,l.kt)("p",null,"Will return the current user if a fetcher is available"),(0,l.kt)("h4",{id:"__aenter__"},"_","_","aenter","_","_"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'async def __aenter__() -> "Herre"\n')),(0,l.kt)("p",null,"Enters the context and logs in if needed"),(0,l.kt)("h4",{id:"__aexit__"},"_","_","aexit","_","_"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"async def __aexit__(*args, **kwargs) -> None\n")),(0,l.kt)("p",null,"Exits the context and logs out if needed"),(0,l.kt)("h4",{id:"_repr_html_inline_"},"_","repr","_","html","_","inline","_"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"def _repr_html_inline_() -> str\n")),(0,l.kt)("p",null,"Jupyter inline representation"),(0,l.kt)("h2",{id:"config-objects"},"Config Objects"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"class Config()\n")),(0,l.kt)("p",null,"Pydantic config"),(0,l.kt)("h4",{id:"get_current_herre"},"get","_","current","_","herre"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"def get_current_herre() -> Herre\n")),(0,l.kt)("p",null,"Get the current herre instance"))}k.isMDXComponent=!0}}]);