"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[286],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return k}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=u(n),k=r,m=d["".concat(s,".").concat(k)]||d[k]||c[k]||i;return n?a.createElement(m,o(o({ref:t},p),{},{components:n})):a.createElement(m,o({ref:t},p))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var u=2;u<i;u++)o[u]=n[u];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},2345:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return s},default:function(){return k},frontMatter:function(){return l},metadata:function(){return u},toc:function(){return c}});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),o=["components"],l={sidebar_label:"session",title:"grants.session"},s=void 0,u={unversionedId:"reference/grants/session",id:"reference/grants/session",title:"grants.session",description:"OAuth2Support for aiohttp.ClientSession.",source:"@site/docs/reference/grants/session.md",sourceDirName:"reference/grants",slug:"/reference/grants/session",permalink:"/herre/docs/reference/grants/session",editUrl:"https://github.com/jhnnsrs/turms/edit/master/website/docs/reference/grants/session.md",tags:[],version:"current",frontMatter:{sidebar_label:"session",title:"grants.session"},sidebar:"tutorialSidebar",previous:{title:"refreshable",permalink:"/herre/docs/reference/grants/refreshable"},next:{title:"app",permalink:"/herre/docs/reference/grants/test/app"}},p={},c=[{value:"TokenUpdated Objects",id:"tokenupdated-objects",level:2},{value:"OAuth2Session Objects",id:"oauth2session-objects",level:2},{value:"__init__",id:"__init__",level:4},{value:"new_state",id:"new_state",level:4},{value:"client_id",id:"client_id",level:4},{value:"client_id",id:"client_id-1",level:4},{value:"client_id",id:"client_id-2",level:4},{value:"token",id:"token",level:4},{value:"token",id:"token-1",level:4},{value:"access_token",id:"access_token",level:4},{value:"access_token",id:"access_token-1",level:4},{value:"access_token",id:"access_token-2",level:4},{value:"authorized",id:"authorized",level:4},{value:"authorization_url",id:"authorization_url",level:4},{value:"fetch_token",id:"fetch_token",level:4},{value:"token_from_fragment",id:"token_from_fragment",level:4},{value:"refresh_token",id:"refresh_token",level:4},{value:"register_compliance_hook",id:"register_compliance_hook",level:4}],d={toc:c};function k(e){var t=e.components,n=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"OAuth2Support for aiohttp.ClientSession.\nBased on the requests_oauthlib class\n",(0,i.kt)("a",{parentName:"p",href:"https://github.com/requests/requests-oauthlib/blob/master/requests_oauthlib/oauth2_session.py"},"https://github.com/requests/requests-oauthlib/blob/master/requests_oauthlib/oauth2_session.py")),(0,i.kt)("h2",{id:"tokenupdated-objects"},"TokenUpdated Objects"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"class TokenUpdated(Warning)\n")),(0,i.kt)("p",null,"Exception."),(0,i.kt)("h2",{id:"oauth2session-objects"},"OAuth2Session Objects"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"class OAuth2Session(aiohttp.ClientSession)\n")),(0,i.kt)("p",null,"Versatile OAuth 2 extension to :class:",(0,i.kt)("inlineCode",{parentName:"p"},"requests.Session"),".\nSupports any grant type adhering to :class:",(0,i.kt)("inlineCode",{parentName:"p"},"oauthlib.oauth2.Client")," spec\nincluding the four core OAuth 2 grants.\nCan be used to create authorization urls, fetch tokens and access protected\nresources using the :class:",(0,i.kt)("inlineCode",{parentName:"p"},"requests.Session")," interface you are used to."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},":class:",(0,i.kt)("inlineCode",{parentName:"li"},"oauthlib.oauth2.WebApplicationClient")," (default): Authorization Code Grant"),(0,i.kt)("li",{parentName:"ul"},":class:",(0,i.kt)("inlineCode",{parentName:"li"},"oauthlib.oauth2.MobileApplicationClient"),": Implicit Grant"),(0,i.kt)("li",{parentName:"ul"},":class:",(0,i.kt)("inlineCode",{parentName:"li"},"oauthlib.oauth2.LegacyApplicationClient"),": Password Credentials Grant"),(0,i.kt)("li",{parentName:"ul"},":class:",(0,i.kt)("inlineCode",{parentName:"li"},"oauthlib.oauth2.BackendApplicationClient"),": Client Credentials Grant\nNote that the only time you will be using Implicit Grant from python is if\nyou are driving a user agent able to obtain URL fragments.")),(0,i.kt)("h4",{id:"__init__"},"_","_","init","_","_"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"def __init__(client_id=None, client=None, auto_refresh_url=None, auto_refresh_kwargs=None, scope=None, redirect_uri=None, token=None, state=None, token_updater=None, **kwargs)\n")),(0,i.kt)("p",null,"Construct a new OAuth 2 client session."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"client_id"),": Client id obtained during registration"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"client"),": :class:",(0,i.kt)("inlineCode",{parentName:"li"},"oauthlib.oauth2.Client")," to be used. Default is\nWebApplicationClient which is useful for any\nhosted application but not mobile or desktop."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"scope"),": List of scopes you wish to request access to"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"redirect_uri"),": Redirect URI you registered as callback"),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"token"),": Token dictionary, must include access_token\nand token_type."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"state"),": State string used to prevent CSRF. This will be given\nwhen creating the authorization url and must be supplied\nwhen parsing the authorization response.\nCan be either a string or a no argument callable."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"kwargs"),": Arguments to pass to the Session constructor.")),(0,i.kt)("h4",{id:"new_state"},"new","_","state"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"def new_state()\n")),(0,i.kt)("p",null,"Generates a state string to be used in authorizations."),(0,i.kt)("h4",{id:"client_id"},"client","_","id"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"@property\ndef client_id()\n")),(0,i.kt)("p",null,"Get the client_id."),(0,i.kt)("h4",{id:"client_id-1"},"client","_","id"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"@client_id.setter\ndef client_id(value)\n")),(0,i.kt)("p",null,"Set the client_id."),(0,i.kt)("h4",{id:"client_id-2"},"client","_","id"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"@client_id.deleter\ndef client_id()\n")),(0,i.kt)("p",null,"Remove the client_id."),(0,i.kt)("h4",{id:"token"},"token"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"@property\ndef token()\n")),(0,i.kt)("p",null,"Get the token."),(0,i.kt)("h4",{id:"token-1"},"token"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"@token.setter\ndef token(value)\n")),(0,i.kt)("p",null,"Set the token."),(0,i.kt)("h4",{id:"access_token"},"access","_","token"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"@property\ndef access_token()\n")),(0,i.kt)("p",null,"Get the access_token."),(0,i.kt)("h4",{id:"access_token-1"},"access","_","token"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"@access_token.setter\ndef access_token(value)\n")),(0,i.kt)("p",null,"Set the access_token."),(0,i.kt)("h4",{id:"access_token-2"},"access","_","token"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"@access_token.deleter\ndef access_token()\n")),(0,i.kt)("p",null,"Remove the access_token."),(0,i.kt)("h4",{id:"authorized"},"authorized"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"@property\ndef authorized()\n")),(0,i.kt)("p",null,"Boolean that indicates whether this session has an OAuth token\nor not. If ",(0,i.kt)("inlineCode",{parentName:"p"},"self.authorized")," is True, you can reasonably expect\nOAuth-protected requests to the resource to succeed. If\n",(0,i.kt)("inlineCode",{parentName:"p"},"self.authorized")," is False, you need the user to go through the OAuth\nauthentication dance before OAuth-protected requests to the resource\nwill succeed."),(0,i.kt)("h4",{id:"authorization_url"},"authorization","_","url"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"def authorization_url(url, state=None, **kwargs)\n")),(0,i.kt)("p",null,"Form an authorization URL."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"url"),": Authorization endpoint url, must be HTTPS."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"state"),": An optional state string for CSRF protection. If not\ngiven it will be generated for you."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"kwargs"),": Extra parameters to include.")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns"),":"),(0,i.kt)("p",null,"authorization_url, state"),(0,i.kt)("h4",{id:"fetch_token"},"fetch","_","token"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'async def fetch_token(token_url, code=None, authorization_response=None, body="", auth=None, username=None, password=None, method="POST", force_querystring=False, timeout=None, headers=None, verify_ssl=True, proxies=None, include_client_id=None, client_id=None, client_secret=None, **kwargs)\n')),(0,i.kt)("p",null,"Generic method for fetching an access token from the token endpoint."),(0,i.kt)("p",null,"If you are using the MobileApplicationClient you will want to use\n",(0,i.kt)("inlineCode",{parentName:"p"},"token_from_fragment")," instead of ",(0,i.kt)("inlineCode",{parentName:"p"},"fetch_token"),".\nThe current implementation enforces the RFC guidelines."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"token_url"),": Token endpoint URL, must use HTTPS."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"code"),": Authorization code (used by WebApplicationClients)."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"authorization_response"),": Authorization response URL, the callback\nURL of the request back to you. Used by\nWebApplicationClients instead of code."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"body"),": Optional application/x-www-form-urlencoded body to add the\ninclude in the token request. Prefer kwargs over body."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"auth"),": An auth tuple or method as accepted by ",(0,i.kt)("inlineCode",{parentName:"li"},"requests"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"username"),": Username required by LegacyApplicationClients to appear\nin the request body."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"password"),": Password required by LegacyApplicationClients to appear\nin the request body."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"method"),": The HTTP method used to make the request. Defaults\nto POST, but may also be GET. Other methods should\nbe added as needed."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"force_querystring"),": If True, force the request body to be sent\nin the querystring instead."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"timeout"),": Timeout of the request in seconds."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"headers"),": Dict to default request headers with."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"verify"),": Verify SSL certificate."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"proxies"),": The ",(0,i.kt)("inlineCode",{parentName:"li"},"proxies")," argument is passed onto ",(0,i.kt)("inlineCode",{parentName:"li"},"requests"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"include_client_id"),": Should the request body include the\n",(0,i.kt)("inlineCode",{parentName:"li"},"client_id")," parameter. Default is ",(0,i.kt)("inlineCode",{parentName:"li"},"None"),",\nwhich will attempt to autodetect. This can be\nforced to always include (True) or never\ninclude (False)."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"client_secret"),": The ",(0,i.kt)("inlineCode",{parentName:"li"},"client_secret")," paired to the ",(0,i.kt)("inlineCode",{parentName:"li"},"client_id"),".\nThis is generally required unless provided in the\n",(0,i.kt)("inlineCode",{parentName:"li"},"auth")," tuple. If the value is ",(0,i.kt)("inlineCode",{parentName:"li"},"None"),", it will be\nomitted from the request, however if the value is\nan empty string, an empty string will be sent."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"kwargs"),": Extra parameters to include in the token request.")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns"),":"),(0,i.kt)("p",null,"A token dict"),(0,i.kt)("h4",{id:"token_from_fragment"},"token","_","from","_","fragment"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"def token_from_fragment(authorization_response)\n")),(0,i.kt)("p",null,"Parse token from the URI fragment, used by MobileApplicationClients."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"authorization_response"),": The full URL of the redirect back to you")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns"),":"),(0,i.kt)("p",null,"A token dict"),(0,i.kt)("h4",{id:"refresh_token"},"refresh","_","token"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},'async def refresh_token(token_url, refresh_token=None, body="", auth=None, timeout=None, headers=None, verify_ssl=True, proxies=None, **kwargs)\n')),(0,i.kt)("p",null,"Fetch a new access token using a refresh token."),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"token_url"),": The token endpoint, must be HTTPS."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"refresh_token"),": The refresh_token to use."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"body"),": Optional application/x-www-form-urlencoded body to add the\ninclude in the token request. Prefer kwargs over body."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"auth"),": An auth tuple or method as accepted by ",(0,i.kt)("inlineCode",{parentName:"li"},"requests"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"timeout"),": Timeout of the request in seconds."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"headers"),": A dict of headers to be used by ",(0,i.kt)("inlineCode",{parentName:"li"},"requests"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"verify"),": Verify SSL certificate."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"proxies"),": The ",(0,i.kt)("inlineCode",{parentName:"li"},"proxies")," argument will be passed to ",(0,i.kt)("inlineCode",{parentName:"li"},"requests"),"."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"kwargs"),": Extra parameters to include in the token request.")),(0,i.kt)("p",null,(0,i.kt)("strong",{parentName:"p"},"Returns"),":"),(0,i.kt)("p",null,"A token dict"),(0,i.kt)("h4",{id:"register_compliance_hook"},"register","_","compliance","_","hook"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"def register_compliance_hook(hook_type, hook)\n")),(0,i.kt)("p",null,"Register a hook for request/response tweaking.\nAvailable hooks are:\naccess_token_response invoked before token parsing.\nrefresh_token_response invoked before refresh token parsing.\nprotected_request invoked before making a request.\nIf you find a new hook is needed please send a GitHub PR request\nor open an issue."))}k.isMDXComponent=!0}}]);