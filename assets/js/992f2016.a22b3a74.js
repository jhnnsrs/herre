"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9742],{3905:function(e,t,r){r.d(t,{Zo:function(){return c},kt:function(){return h}});var n=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var s=n.createContext({}),u=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},c=function(e){var t=u(e.components);return n.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=i(e,["components","mdxType","originalType","parentName"]),f=u(r),h=a,k=f["".concat(s,".").concat(h)]||f[h]||p[h]||o;return r?n.createElement(k,l(l({ref:t},c),{},{components:r})):n.createElement(k,l({ref:t},c))}));function h(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,l=new Array(o);l[0]=f;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var u=2;u<o;u++)l[u]=r[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},7298:function(e,t,r){r.r(t),r.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return h},frontMatter:function(){return i},metadata:function(){return u},toc:function(){return p}});var n=r(7462),a=r(3366),o=(r(7294),r(3905)),l=["components"],i={sidebar_label:"refresh",title:"grants.oauth2.refresh"},s=void 0,u={unversionedId:"reference/grants/oauth2/refresh",id:"reference/grants/oauth2/refresh",title:"grants.oauth2.refresh",description:"arefresh",source:"@site/docs/reference/grants/oauth2/refresh.md",sourceDirName:"reference/grants/oauth2",slug:"/reference/grants/oauth2/refresh",permalink:"/herre/docs/reference/grants/oauth2/refresh",editUrl:"https://github.com/jhnnsrs/turms/edit/master/website/docs/reference/grants/oauth2/refresh.md",tags:[],version:"current",frontMatter:{sidebar_label:"refresh",title:"grants.oauth2.refresh"},sidebar:"tutorialSidebar",previous:{title:"qt_login_view",permalink:"/herre/docs/reference/grants/oauth2/redirecters/qt_login_view"},next:{title:"utils",permalink:"/herre/docs/reference/grants/oauth2/utils"}},c={},p=[{value:"arefresh",id:"arefresh",level:4},{value:"RefreshGrant Objects",id:"refreshgrant-objects",level:2},{value:"afetch_token",id:"afetch_token",level:4},{value:"TokenRequest Context Parameters",id:"tokenrequest-context-parameters",level:2},{value:"Parameters",id:"parameters",level:2},{value:"Returns",id:"returns",level:2}],f={toc:p};function h(e){var t=e.components,r=(0,a.Z)(e,l);return(0,o.kt)("wrapper",(0,n.Z)({},f,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h4",{id:"arefresh"},"arefresh"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"async def arefresh(resfresh_url: str,\n                   client_id: str,\n                   client_secret: str,\n                   refresh_token: str,\n                   ssl_context: Optional[ssl.SSLContext] = None) -> Token\n")),(0,o.kt)("p",null,"Refreshes a token on the given url with the given client_id and client_secret"),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"resfresh_url")," ",(0,o.kt)("em",{parentName:"li"},"str")," - The url to refresh the token on"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"client_id")," ",(0,o.kt)("em",{parentName:"li"},"str")," - The client_id to use"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"client_secret")," ",(0,o.kt)("em",{parentName:"li"},"str")," - The client_secret to use"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"refresh_token")," ",(0,o.kt)("em",{parentName:"li"},"str")," - The refresh_token to use"),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"ssl_context")," ",(0,o.kt)("em",{parentName:"li"},"Optional","[ssl.SSLContext]",", optional")," - Specific SSL token to use. Defaults to None.")),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Returns"),":"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"Oauth2Token")," - The refreshed token")),(0,o.kt)("h2",{id:"refreshgrant-objects"},"RefreshGrant Objects"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"class RefreshGrant(BaseGrant)\n")),(0,o.kt)("p",null,"Tries to refresh the token (if it is not expired)\nand a refresh token is available. When the token is expired\nand no refresh token is available, it will try to fetch a new token."),(0,o.kt)("p",null,"This grant does not refresh the token automatically. Only when it is\nimplicitly called by the Herre api."),(0,o.kt)("p",null,"You can choose autofresh grant to refresh the token automatically."),(0,o.kt)("p",null,(0,o.kt)("strong",{parentName:"p"},"Arguments"),":"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"BaseGrant")," ",(0,o.kt)("strong",{parentName:"li"},"type")," - ",(0,o.kt)("em",{parentName:"li"},"description"))),(0,o.kt)("h4",{id:"afetch_token"},"afetch","_","token"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"async def afetch_token(request: TokenRequest) -> Token\n")),(0,o.kt)("p",null,"Fetches a token"),(0,o.kt)("p",null,"This function will get a token from the underlying grant,\nonce granted it will try to refresh the token if it is expired\nand a refresh token is available. When the token is expired\nand no refresh token is available, it will try to fetch a new token."),(0,o.kt)("h2",{id:"tokenrequest-context-parameters"},"TokenRequest Context Parameters"),(0,o.kt)("p",null,"allow_refresh: bool\nWhether to allow refreshing the token. Defaults to True"),(0,o.kt)("h2",{id:"parameters"},"Parameters"),(0,o.kt)("p",null,"request : TokenRequest\nThe token request to use"),(0,o.kt)("h2",{id:"returns"},"Returns"),(0,o.kt)("p",null,"Token\nThe token"))}h.isMDXComponent=!0}}]);